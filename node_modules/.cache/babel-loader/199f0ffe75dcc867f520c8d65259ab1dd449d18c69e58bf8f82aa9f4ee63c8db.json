{"ast":null,"code":"var _jsxFileName = \"/home/user/rahimova/src/context/CartContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext } from 'react';\n\n// Создаем контекст с初始значением\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CartContext = /*#__PURE__*/createContext({\n  cart: [],\n  addToCart: () => {},\n  removeFromCart: () => {},\n  clearCart: () => {}\n});\nexport const CartProvider = ({\n  children\n}) => {\n  _s();\n  const [cart, setCart] = useState([]);\n  const addToCart = product => {\n    // Проверяем, есть ли уже такой товар\n    const existingProduct = cart.find(item => item.id === product.id);\n    if (existingProduct) {\n      // Если товар есть, увеличиваем количество\n      setCart(cart.map(item => item.id === product.id ? {\n        ...item,\n        quantity: (item.quantity || 1) + 1\n      } : item));\n    } else {\n      // Если товара нет, добавляем новый\n      setCart([...cart, {\n        ...product,\n        quantity: 1\n      }]);\n    }\n  };\n  const removeFromCart = productId => {\n    setCart(cart.filter(item => item.id !== productId));\n  };\n  const clearCart = () => {\n    setCart([]);\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: {\n      cart,\n      addToCart,\n      removeFromCart,\n      clearCart\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n\n// Кастомный хук для удобного использования контекста\n_s(CartProvider, \"ZqFaEIYkzI5UoYUmTgmqHbYYm/0=\");\n_c = CartProvider;\nexport const useCart = () => {\n  _s2();\n  const context = useContext(CartContext);\n  if (!context) {\n    throw new Error('useCart must be used within a CartProvider');\n  }\n  return context;\n};\n_s2(useCart, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","jsxDEV","_jsxDEV","CartContext","cart","addToCart","removeFromCart","clearCart","CartProvider","children","_s","setCart","product","existingProduct","find","item","id","map","quantity","productId","filter","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useCart","_s2","context","Error","$RefreshReg$"],"sources":["/home/user/rahimova/src/context/CartContext.js"],"sourcesContent":["import React, { createContext, useState, useContext } from 'react';\n\n// Создаем контекст с初始значением\nconst CartContext = createContext({\n  cart: [],\n  addToCart: () => {},\n  removeFromCart: () => {},\n  clearCart: () => {}\n});\n\nexport const CartProvider = ({ children }) => {\n  const [cart, setCart] = useState([]);\n\n  const addToCart = (product) => {\n    // Проверяем, есть ли уже такой товар\n    const existingProduct = cart.find(item => item.id === product.id);\n\n    if (existingProduct) {\n      // Если товар есть, увеличиваем количество\n      setCart(cart.map(item => \n        item.id === product.id \n          ? {...item, quantity: (item.quantity || 1) + 1} \n          : item\n      ));\n    } else {\n      // Если товара нет, добавляем новый\n      setCart([...cart, {...product, quantity: 1}]);\n    }\n  };\n\n  const removeFromCart = (productId) => {\n    setCart(cart.filter(item => item.id !== productId));\n  };\n\n  const clearCart = () => {\n    setCart([]);\n  };\n\n  return (\n    <CartContext.Provider \n      value={{ \n        cart, \n        addToCart, \n        removeFromCart,\n        clearCart \n      }}\n    >\n      {children}\n    </CartContext.Provider>\n  );\n};\n\n// Кастомный хук для удобного использования контекста\nexport const useCart = () => {\n  const context = useContext(CartContext);\n\n  if (!context) {\n    throw new Error('useCart must be used within a CartProvider');\n  }\n\n  return context;\n};\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,UAAU,QAAQ,OAAO;;AAElE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,WAAW,gBAAGL,aAAa,CAAC;EAChCM,IAAI,EAAE,EAAE;EACRC,SAAS,EAAEA,CAAA,KAAM,CAAC,CAAC;EACnBC,cAAc,EAAEA,CAAA,KAAM,CAAC,CAAC;EACxBC,SAAS,EAAEA,CAAA,KAAM,CAAC;AACpB,CAAC,CAAC;AAEF,OAAO,MAAMC,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACN,IAAI,EAAEO,OAAO,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAEpC,MAAMM,SAAS,GAAIO,OAAO,IAAK;IAC7B;IACA,MAAMC,eAAe,GAAGT,IAAI,CAACU,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKJ,OAAO,CAACI,EAAE,CAAC;IAEjE,IAAIH,eAAe,EAAE;MACnB;MACAF,OAAO,CAACP,IAAI,CAACa,GAAG,CAACF,IAAI,IACnBA,IAAI,CAACC,EAAE,KAAKJ,OAAO,CAACI,EAAE,GAClB;QAAC,GAAGD,IAAI;QAAEG,QAAQ,EAAE,CAACH,IAAI,CAACG,QAAQ,IAAI,CAAC,IAAI;MAAC,CAAC,GAC7CH,IACN,CAAC,CAAC;IACJ,CAAC,MAAM;MACL;MACAJ,OAAO,CAAC,CAAC,GAAGP,IAAI,EAAE;QAAC,GAAGQ,OAAO;QAAEM,QAAQ,EAAE;MAAC,CAAC,CAAC,CAAC;IAC/C;EACF,CAAC;EAED,MAAMZ,cAAc,GAAIa,SAAS,IAAK;IACpCR,OAAO,CAACP,IAAI,CAACgB,MAAM,CAACL,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKG,SAAS,CAAC,CAAC;EACrD,CAAC;EAED,MAAMZ,SAAS,GAAGA,CAAA,KAAM;IACtBI,OAAO,CAAC,EAAE,CAAC;EACb,CAAC;EAED,oBACET,OAAA,CAACC,WAAW,CAACkB,QAAQ;IACnBC,KAAK,EAAE;MACLlB,IAAI;MACJC,SAAS;MACTC,cAAc;MACdC;IACF,CAAE;IAAAE,QAAA,EAEDA;EAAQ;IAAAc,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;;AAED;AAAAhB,EAAA,CA1CaF,YAAY;AAAAmB,EAAA,GAAZnB,YAAY;AA2CzB,OAAO,MAAMoB,OAAO,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAC3B,MAAMC,OAAO,GAAG9B,UAAU,CAACG,WAAW,CAAC;EAEvC,IAAI,CAAC2B,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,4CAA4C,CAAC;EAC/D;EAEA,OAAOD,OAAO;AAChB,CAAC;AAACD,GAAA,CARWD,OAAO;AAAA,IAAAD,EAAA;AAAAK,YAAA,CAAAL,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}