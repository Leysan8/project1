{"ast":null,"code":"var _jsxFileName = \"/home/user/rahimova/src/components/ThemeToggle.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useTheme } from '../hooks/useTheme';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ThemeToggle = () => {\n  _s();\n  const {\n    themeName,\n    toggleTheme\n  } = useTheme();\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: toggleTheme,\n    className: \"theme-toggle\",\n    children: themeName === 'light' ? 'Темная тема' : 'Светлая тема'\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n};\n_s(ThemeToggle, \"eZJFfn2LniL2GBoEtks4FVwMHpg=\", false, function () {\n  return [useTheme];\n});\n_c = ThemeToggle;\nexport default ThemeToggle;\nvar _c;\n$RefreshReg$(_c, \"ThemeToggle\");","map":{"version":3,"names":["React","useTheme","jsxDEV","_jsxDEV","ThemeToggle","_s","themeName","toggleTheme","onClick","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/user/rahimova/src/components/ThemeToggle.js"],"sourcesContent":["import React from 'react';\nimport { useTheme } from '../hooks/useTheme';\n\nconst ThemeToggle = () => {\n  const { themeName, toggleTheme } = useTheme();\n\n  return (\n    <button onClick={toggleTheme} className=\"theme-toggle\">\n      {themeName === 'light' ? 'Темная тема' : 'Светлая тема'}\n    </button>\n  );\n};\n\nexport default ThemeToggle;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM;IAAEC,SAAS;IAAEC;EAAY,CAAC,GAAGN,QAAQ,CAAC,CAAC;EAE7C,oBACEE,OAAA;IAAQK,OAAO,EAAED,WAAY;IAACE,SAAS,EAAC,cAAc;IAAAC,QAAA,EACnDJ,SAAS,KAAK,OAAO,GAAG,aAAa,GAAG;EAAc;IAAAK,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjD,CAAC;AAEb,CAAC;AAACT,EAAA,CARID,WAAW;EAAA,QACoBH,QAAQ;AAAA;AAAAc,EAAA,GADvCX,WAAW;AAUjB,eAAeA,WAAW;AAAC,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}